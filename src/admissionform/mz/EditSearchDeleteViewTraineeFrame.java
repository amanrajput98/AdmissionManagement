/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package admissionform.mz;

import DbService.mz.TraineeDbService;
import java.beans.PropertyVetoException;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JDesktopPane;
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;
import javax.swing.event.InternalFrameAdapter;
import javax.swing.event.InternalFrameEvent;
import javax.swing.event.InternalFrameListener;
import javax.swing.table.DefaultTableModel;
import mz.beans.Accademics;
import mz.beans.Trainee;

/**
 *
 * @author Aman
 */
public class EditSearchDeleteViewTraineeFrame extends javax.swing.JInternalFrame {

    private JMenuItem editDeleteMenuItem;
    DefaultTableModel model = null;

    /**
     * Creates new form AllInternalFrame
     */
    public EditSearchDeleteViewTraineeFrame() {
        initComponents();
        addInternalFrameListener(new InternalFrameAdapter() {
            @Override
            public void internalFrameClosed(InternalFrameEvent e) {
                editDeleteMenuItem.setEnabled(true);
//                model.setRowCount(0);
                traineeNameTxtField.setText("");
                traineeIdTxtField.setText("");
                emailIdTxtField.setText("");
                phonNumTxtField.setText("");
                trainingEnrolledTxtField.setText("");
            }
        });
    }

    EditSearchDeleteViewTraineeFrame(JMenuItem editDeleteMenuItem) {
        this();
        this.editDeleteMenuItem = editDeleteMenuItem;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        detailsPanel = new javax.swing.JPanel();
        traineeDetailsLabel = new javax.swing.JLabel();
        traineeNameLabel = new javax.swing.JLabel();
        traineeNameTxtField = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        traineeIdTxtField = new javax.swing.JTextField();
        emailIdTxtField = new javax.swing.JTextField();
        phonNumTxtField = new javax.swing.JTextField();
        searchButton = new javax.swing.JButton();
        trainingEnrolledLabel = new javax.swing.JLabel();
        trainingEnrolledTxtField = new javax.swing.JTextField();
        tablePanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        traineeDetailTable = new javax.swing.JTable();
        editButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        viewButton = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);

        traineeDetailsLabel.setFont(new java.awt.Font("Times New Roman", 1, 50)); // NOI18N
        traineeDetailsLabel.setText("Trainee Details");

        traineeNameLabel.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        traineeNameLabel.setText("Trainee Name:");

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel1.setText("Trainee ID:");

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel2.setText("Phone Number:");

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel3.setText("Email Id:");

        searchButton.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        searchButton.setText("Search");
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });

        trainingEnrolledLabel.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        trainingEnrolledLabel.setText("Training Enrolled:");

        javax.swing.GroupLayout detailsPanelLayout = new javax.swing.GroupLayout(detailsPanel);
        detailsPanel.setLayout(detailsPanelLayout);
        detailsPanelLayout.setHorizontalGroup(
            detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(detailsPanelLayout.createSequentialGroup()
                .addGroup(detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(detailsPanelLayout.createSequentialGroup()
                        .addGap(503, 503, 503)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(phonNumTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(detailsPanelLayout.createSequentialGroup()
                        .addGap(483, 483, 483)
                        .addComponent(trainingEnrolledLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(trainingEnrolledTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(detailsPanelLayout.createSequentialGroup()
                        .addGap(511, 511, 511)
                        .addGroup(detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(detailsPanelLayout.createSequentialGroup()
                                .addGroup(detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel1)
                                    .addComponent(traineeNameLabel)
                                    .addComponent(jLabel3))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(traineeIdTxtField, javax.swing.GroupLayout.DEFAULT_SIZE, 238, Short.MAX_VALUE)
                                    .addComponent(traineeNameTxtField, javax.swing.GroupLayout.DEFAULT_SIZE, 233, Short.MAX_VALUE)
                                    .addComponent(emailIdTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(traineeDetailsLabel))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, detailsPanelLayout.createSequentialGroup()
                .addGap(0, 386, Short.MAX_VALUE)
                .addComponent(searchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(645, 645, 645))
        );

        detailsPanelLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {phonNumTxtField, traineeIdTxtField, traineeNameTxtField, trainingEnrolledTxtField});

        detailsPanelLayout.setVerticalGroup(
            detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(detailsPanelLayout.createSequentialGroup()
                .addComponent(traineeDetailsLabel)
                .addGap(23, 23, 23)
                .addGroup(detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(traineeNameTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(traineeNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(traineeIdTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(emailIdTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(phonNumTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(trainingEnrolledLabel)
                    .addComponent(trainingEnrolledTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(searchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        detailsPanelLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {emailIdTxtField, phonNumTxtField, traineeIdTxtField, traineeNameTxtField, trainingEnrolledTxtField});

        detailsPanelLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jLabel1, jLabel2, jLabel3, traineeNameLabel, trainingEnrolledLabel});

        traineeDetailTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Trainee Id", "Trainee Name", "Phone Number", "Email ID", "Father's Name", "Father's Phone Number", "Training Enrolled", "..."
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.Object.class, java.lang.String.class, java.lang.Integer.class, java.lang.Object.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        traineeDetailTable.setRowHeight(22);
        jScrollPane1.setViewportView(traineeDetailTable);
        if (traineeDetailTable.getColumnModel().getColumnCount() > 0) {
            traineeDetailTable.getColumnModel().getColumn(0).setResizable(false);
            traineeDetailTable.getColumnModel().getColumn(0).setPreferredWidth(50);
            traineeDetailTable.getColumnModel().getColumn(1).setResizable(false);
            traineeDetailTable.getColumnModel().getColumn(2).setResizable(false);
            traineeDetailTable.getColumnModel().getColumn(3).setResizable(false);
            traineeDetailTable.getColumnModel().getColumn(4).setResizable(false);
            traineeDetailTable.getColumnModel().getColumn(5).setResizable(false);
            traineeDetailTable.getColumnModel().getColumn(6).setResizable(false);
            traineeDetailTable.getColumnModel().getColumn(7).setPreferredWidth(40);
            traineeDetailTable.getColumnModel().getColumn(7).setMaxWidth(40);
        }

        editButton.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        editButton.setText("Edit");
        editButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editButtonActionPerformed(evt);
            }
        });

        deleteButton.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        deleteButton.setText("Delete");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        viewButton.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        viewButton.setText("View");
        viewButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout tablePanelLayout = new javax.swing.GroupLayout(tablePanel);
        tablePanel.setLayout(tablePanelLayout);
        tablePanelLayout.setHorizontalGroup(
            tablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addGroup(tablePanelLayout.createSequentialGroup()
                .addGap(222, 222, 222)
                .addComponent(editButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(viewButton)
                .addGap(339, 339, 339)
                .addComponent(deleteButton)
                .addGap(243, 243, 243))
        );
        tablePanelLayout.setVerticalGroup(
            tablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tablePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 14, Short.MAX_VALUE)
                .addGroup(tablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(editButton)
                    .addComponent(deleteButton)
                    .addComponent(viewButton)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(tablePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addComponent(detailsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(detailsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(tablePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(27, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    public void showTrainee() {
        try {
            ArrayList<Trainee> traineeList;
            int traineeId = 0;
            if (traineeIdTxtField.getText().isEmpty()) {
                traineeId = 0;
            } else {
                traineeId = Integer.parseInt(traineeIdTxtField.getText());
            }
            Trainee traineeToBeSearched = new Trainee(traineeId, traineeNameTxtField.getText(), emailIdTxtField.getText(), phonNumTxtField.getText(), trainingEnrolledTxtField.getText());
            traineeList = TraineeDbService.searchTrainee(traineeToBeSearched);
            model = (DefaultTableModel) traineeDetailTable.getModel();
            for (Trainee trainee : traineeList) {
                Object[] row = {
                    trainee.getTraineeId(),
                    trainee.getTraineeName(),
                    trainee.getTraineePhoneNum(),
                    trainee.getEmailId(),
                    trainee.getFatherName(),
                    trainee.getFatherPhoneNum(),
                    trainee.getTrainingEnrolled()
                };
                model.addRow(row);
            }
            if (model.getRowCount() == 0) {
                JOptionPane.showMessageDialog(null, "No record Found !!", "ERROR", JOptionPane.OK_OPTION);
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | SQLException ex) {
            Logger.getLogger(EditSearchDeleteViewTraineeFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        model = (DefaultTableModel) traineeDetailTable.getModel();
        model.setRowCount(0);
        showTrainee();
    }//GEN-LAST:event_searchButtonActionPerformed

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        int rows[] = traineeDetailTable.getSelectedRows();
        Boolean check = false;
        if (rows.length > 0) {
            int result = JOptionPane.showConfirmDialog(null, "Are you sure to delete the following Trainee ??", "Delete", JOptionPane.YES_NO_OPTION);
            if (result == 0) {
                for (int i = 0; i < rows.length; i++) {
                    try {
                        int traineeId = Integer.parseInt(model.getValueAt(rows[i], 0).toString());
                        System.err.println(traineeId);
                        Trainee traineeToBeDeleted = new Trainee(traineeId);
                        TraineeDbService trainee = new TraineeDbService();
                        check = trainee.deleteTrainee(traineeToBeDeleted);
                    } catch (ClassNotFoundException | InstantiationException | IllegalAccessException ex) {
                        Logger.getLogger(EditSearchDeleteViewTrainingsFrame.class.getName()).log(Level.SEVERE, null, ex);
                    } catch (SQLException ex) {
                        Logger.getLogger(EditSearchDeleteViewTraineeFrame.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
                if (check) {
                    model.setRowCount(0);
                    showTrainee();
                    JOptionPane.showMessageDialog(null, "Trainee successfully deleted!!");
                }
            }
        } else {
            JOptionPane.showMessageDialog(null, "please select atleast one trainee to delete !!", "Delete", JOptionPane.OK_OPTION);
        }
    }//GEN-LAST:event_deleteButtonActionPerformed

    private void viewButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewButtonActionPerformed
        DefaultTableModel model = (DefaultTableModel) traineeDetailTable.getModel();
        //int row = traineeDetailTable.getSelectedRow();
        //int temp = 0;
        Trainee viewTrainee=null;
        int rows[] = traineeDetailTable.getSelectedRows();
//        for (int i = 0; i < rows; i++) {
//            if (((Boolean) model.getValueAt(i, 7) != null && (Boolean) model.getValueAt(i, 7)) == true) {
//                temp++;
//            }
//        }
        if (rows.length == 1) {
//            for (int i = 0; i < rows; i++) {
//                if ((Boolean) model.getValueAt(i, 7) != null && (Boolean) model.getValueAt(i, 7) == true) {
            try {
                int traineeId = Integer.parseInt(model.getValueAt(rows[0], 0).toString());
               // ArrayList<Trainee> viewTraineeList;
               // ArrayList<Accademics> viewAcademicsList;
                Trainee traineeToBeViewed = new Trainee(traineeId);
                viewTrainee = TraineeDbService.viewTrainee(traineeToBeViewed);
                //viewAcademicsList = TraineeDbService.viewAcademics(traineeId);
                AddmissionFormFrame setValues = new AddmissionFormFrame(viewTrainee);
                AddmissionFormFrame.saveButton.setVisible(false);
                JDesktopPane pane = getDesktopPane();
                pane.add(setValues);
                setValues.setVisible(true);
                setValues.setMaximum(true);
            } catch (SQLException | ClassNotFoundException | InstantiationException | IllegalAccessException | PropertyVetoException ex) {
                Logger.getLogger(EditSearchDeleteViewTraineeFrame.class.getName()).log(Level.SEVERE, null, ex);
            }

//                }
//            }
        } else if (rows.length > 1) {
            JOptionPane.showMessageDialog(null, "Cannot Select more than 1 training !!", "View", JOptionPane.OK_OPTION);
        } else {
            JOptionPane.showMessageDialog(null, "select training to View !!", "View", JOptionPane.OK_OPTION);
        }
    }//GEN-LAST:event_viewButtonActionPerformed

    private void editButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editButtonActionPerformed
        //int temp = 0;
        //       DefaultTableModel model = (DefaultTableModel) trainingsTable.getModel();
        int rows[] = traineeDetailTable.getSelectedRows();
        Trainee editedTrainee=null;
        if (rows.length == 1) {
            // for (int i = 0; i < rows; i++) {
            // if ((Boolean) model.getValueAt(i, 7) != null && (Boolean) model.getValueAt(i, 7) == true) {
            try {
                int traineeId = Integer.parseInt(model.getValueAt(rows[0], 0).toString());
               // ArrayList<Trainee> editTraineeList;
              //  ArrayList<Accademics> editAcademicsList;
                Trainee traineeToBeUpdated = new Trainee(traineeId);
                editedTrainee = TraineeDbService.viewTrainee(traineeToBeUpdated);
                String name=editedTrainee.getTraineeName();
                System.err.println(name+":::::::");
                List<Accademics> ada=editedTrainee.getAccademics();
                System.err.println(ada);
                for(Accademics adalist:ada){
                    System.err.println(adalist.getDegree()); 
                }
                
              //  editAcademicsList = TraineeDbService.viewAcademics(traineeId);
                AddmissionFormFrame toBeUpdate = new AddmissionFormFrame(editedTrainee);
                AddmissionFormFrame.saveButton.setText("Update");
                JDesktopPane desktopPane = getDesktopPane();
                desktopPane.add(toBeUpdate);
                toBeUpdate.setVisible(true);
                toBeUpdate.setMaximum(true);
            } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | SQLException | PropertyVetoException ex) {
                Logger.getLogger(EditSearchDeleteViewTrainingsFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
            //}
            //}
        } else if (rows.length > 1) {
            JOptionPane.showMessageDialog(null, "Cannot Select more than 1 training !!", "Update", JOptionPane.OK_OPTION);
        } else {
            JOptionPane.showMessageDialog(null, "select training to Update !!", "Update", JOptionPane.OK_OPTION);
        }

    }//GEN-LAST:event_editButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton deleteButton;
    private javax.swing.JPanel detailsPanel;
    private javax.swing.JButton editButton;
    private javax.swing.JTextField emailIdTxtField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField phonNumTxtField;
    private javax.swing.JButton searchButton;
    private javax.swing.JPanel tablePanel;
    private javax.swing.JTable traineeDetailTable;
    private javax.swing.JLabel traineeDetailsLabel;
    private javax.swing.JTextField traineeIdTxtField;
    private javax.swing.JLabel traineeNameLabel;
    private javax.swing.JTextField traineeNameTxtField;
    private javax.swing.JLabel trainingEnrolledLabel;
    private javax.swing.JTextField trainingEnrolledTxtField;
    private javax.swing.JButton viewButton;
    // End of variables declaration//GEN-END:variables
}

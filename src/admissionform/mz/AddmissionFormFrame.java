/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package admissionform.mz;

import DbService.mz.TraineeDbService;
import DbService.mz.TrainingsDbService;
import com.toedter.calendar.JTextFieldDateEditor;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Pattern;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;
import javax.swing.event.InternalFrameAdapter;
import javax.swing.event.InternalFrameEvent;
import javax.swing.event.InternalFrameListener;
import javax.swing.table.DefaultTableModel;
import mz.beans.Accademics;
import mz.beans.Trainee;
import mz.beans.Trainings;

/**
 *
 * @author Aman
 */
public class AddmissionFormFrame extends javax.swing.JInternalFrame {

    JTextFieldDateEditor dteditor;
    DefaultComboBoxModel trainingNameModel = null;
    ArrayList<Accademics> viewAcademicsList;

    /**
     * Creates new form AddmissionForm1
     */
    AddmissionFormFrame(JMenuItem addingMenuItem) {
        this();
        mainScrollPane.getVerticalScrollBar().setUnitIncrement(16);
        addInternalFrameListener(new InternalFrameAdapter() {
            @Override
            public void internalFrameClosed(InternalFrameEvent e) {
                addingMenuItem.setEnabled(true);
            }
        });

    }

    public AddmissionFormFrame() {
        initComponents();
        if (enrolledByTxtField.getText().trim().matches("") || enrolledByTxtField.getText().isEmpty() && saveButton.getText().equals("Save")) {
            saveButton.setEnabled(false);
        } else if (saveButton.getText().equals("Update")) {
            saveButton.setEnabled(true);
        }
        try {
            ArrayList<Trainings> list;
            list = TrainingsDbService.getTrainings();
            trainingNameModel = (DefaultComboBoxModel) trainingsComboBox.getModel();
            for (Trainings val : list) {
                trainingNameModel.addElement(val.getTrainingName());
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | SQLException ex) {
            Logger.getLogger(AddmissionFormFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            traineeIdTxtField.setText(String.valueOf(TraineeDbService.getLastTraineeId() + 1));
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | SQLException ex) {
            Logger.getLogger(AddmissionFormFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

//    AddmissionFormFrame(ArrayList<Trainee> viewEditTraineeList, ArrayList<Accademics> viewAcademicsList) {
//        this();
//        this.viewAcademicsList = viewAcademicsList;
//        settingValue(viewEditTraineeList);
//        setAcademicsTable(viewAcademicsList);
//    }
    AddmissionFormFrame(Trainee traineeToBeUpdated) {
        this();
        settingValue(traineeToBeUpdated);
        setAcademicsTable(traineeToBeUpdated.getAccademics());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     *
     * @return
     */
    @SuppressWarnings("unchecked")

    public String getSelectedInstallments() {
        if (oneTimeBtn.isSelected()) {
            return "one time";
        }
        return "installments";
    }
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        genderButtonGroup = new javax.swing.ButtonGroup();
        paymentModeButtonGroup = new javax.swing.ButtonGroup();
        mainScrollPane = new javax.swing.JScrollPane();
        mainPanel = new javax.swing.JPanel();
        accademicDetailsPanel = new javax.swing.JPanel();
        tableScrollPane = new javax.swing.JScrollPane();
        accademicDetailsTable = new javax.swing.JTable();
        officeUsePanel = new javax.swing.JPanel();
        trainingNameLabel = new javax.swing.JLabel();
        durationLabel = new javax.swing.JLabel();
        durationTxtField = new javax.swing.JTextField();
        feeLabel = new javax.swing.JLabel();
        feeTxtField = new javax.swing.JTextField();
        paymentModeLabel = new javax.swing.JLabel();
        regNumLabel = new javax.swing.JLabel();
        traineeIdTxtField = new javax.swing.JTextField();
        enrolledByLabel = new javax.swing.JLabel();
        enrolledByTxtField = new javax.swing.JTextField();
        trainingsComboBox = new javax.swing.JComboBox();
        oneTimeBtn = new javax.swing.JRadioButton();
        installmentBtn = new javax.swing.JRadioButton();
        addmisionFormLabel = new javax.swing.JLabel();
        personalDetailsPanel = new javax.swing.JPanel();
        traineeNameLabel = new javax.swing.JLabel();
        traineeNameTxtField = new javax.swing.JTextField();
        genderLabel = new javax.swing.JLabel();
        maleRadioButton = new javax.swing.JRadioButton();
        femaleRadioButton = new javax.swing.JRadioButton();
        traineePhoneLabel = new javax.swing.JLabel();
        traineePhoneTxtField = new javax.swing.JTextField();
        emailLabel = new javax.swing.JLabel();
        emailTxtField = new javax.swing.JTextField();
        dobLabel = new javax.swing.JLabel();
        fatherNameLabel = new javax.swing.JLabel();
        fatherNameTxtField = new javax.swing.JTextField();
        fatherPhoneLabel = new javax.swing.JLabel();
        fatherphoneTxtField = new javax.swing.JTextField();
        occuLabel = new javax.swing.JLabel();
        occuTxtField = new javax.swing.JTextField();
        addressLabel = new javax.swing.JLabel();
        addressScrollPane = new javax.swing.JScrollPane();
        permanentAddressTxtArea = new javax.swing.JTextArea();
        cityLabel = new javax.swing.JLabel();
        permanentCityTxtField = new javax.swing.JTextField();
        pinLabel = new javax.swing.JLabel();
        permanentPinTxtField = new javax.swing.JTextField();
        dobDateChooser = new com.toedter.calendar.JDateChooser();
        tempAddressLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tempAddressTxtArea = new javax.swing.JTextArea();
        pinTempLabel = new javax.swing.JLabel();
        tempCityTxtField = new javax.swing.JTextField();
        cityTempLabel = new javax.swing.JLabel();
        tempPinTxtField = new javax.swing.JTextField();
        enrolledDateChooser = new com.toedter.calendar.JDateChooser();
        saveButton = new javax.swing.JButton();
        enrolledDateLabel = new javax.swing.JLabel();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);

        mainPanel.setPreferredSize(new java.awt.Dimension(1062, 1100));

        accademicDetailsPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Academic Details", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 1, 14))); // NOI18N

        accademicDetailsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Degree", "Year", "School/college", "Board/University", "Marks"
            }
        ));
        accademicDetailsTable.setGridColor(new java.awt.Color(153, 153, 153));
        accademicDetailsTable.setRowHeight(30);
        tableScrollPane.setViewportView(accademicDetailsTable);

        javax.swing.GroupLayout accademicDetailsPanelLayout = new javax.swing.GroupLayout(accademicDetailsPanel);
        accademicDetailsPanel.setLayout(accademicDetailsPanelLayout);
        accademicDetailsPanelLayout.setHorizontalGroup(
            accademicDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tableScrollPane)
        );
        accademicDetailsPanelLayout.setVerticalGroup(
            accademicDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tableScrollPane, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 199, Short.MAX_VALUE)
        );

        officeUsePanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Training Details(Office Use)", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 1, 14))); // NOI18N

        trainingNameLabel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        trainingNameLabel.setText("Training Enrolled:");

        durationLabel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        durationLabel.setText("Duration:");

        durationTxtField.setEditable(false);

        feeLabel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        feeLabel.setText("Fee:");

        feeTxtField.setEditable(false);

        paymentModeLabel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        paymentModeLabel.setText("Payment Mode:");

        regNumLabel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        regNumLabel.setText("Registeration Number/Trainee ID:");

        traineeIdTxtField.setEditable(false);

        enrolledByLabel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        enrolledByLabel.setText("Enrolled By:");

        enrolledByTxtField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                enrolledByTxtFieldKeyReleased(evt);
            }
        });

        trainingsComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "--SELECT--" }));
        trainingsComboBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                trainingsComboBoxItemStateChanged(evt);
            }
        });

        paymentModeButtonGroup.add(oneTimeBtn);
        oneTimeBtn.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        oneTimeBtn.setText("One Time");

        paymentModeButtonGroup.add(installmentBtn);
        installmentBtn.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        installmentBtn.setText("Installments");

        javax.swing.GroupLayout officeUsePanelLayout = new javax.swing.GroupLayout(officeUsePanel);
        officeUsePanel.setLayout(officeUsePanelLayout);
        officeUsePanelLayout.setHorizontalGroup(
            officeUsePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(officeUsePanelLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(officeUsePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(officeUsePanelLayout.createSequentialGroup()
                        .addGroup(officeUsePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(trainingNameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 122, Short.MAX_VALUE)
                            .addComponent(paymentModeLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(officeUsePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(officeUsePanelLayout.createSequentialGroup()
                                .addComponent(trainingsComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(62, 62, 62)
                                .addComponent(durationLabel)
                                .addGap(15, 15, 15)
                                .addComponent(durationTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(officeUsePanelLayout.createSequentialGroup()
                                .addComponent(oneTimeBtn)
                                .addGap(41, 41, 41)
                                .addComponent(installmentBtn)))
                        .addGap(18, 18, 18)
                        .addComponent(feeLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(feeTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(officeUsePanelLayout.createSequentialGroup()
                        .addComponent(regNumLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(traineeIdTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(officeUsePanelLayout.createSequentialGroup()
                        .addComponent(enrolledByLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(enrolledByTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(43, Short.MAX_VALUE))
        );
        officeUsePanelLayout.setVerticalGroup(
            officeUsePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(officeUsePanelLayout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(officeUsePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, officeUsePanelLayout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addGroup(officeUsePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(durationLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(durationTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(feeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(feeTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(officeUsePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(trainingNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(trainingsComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(officeUsePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(paymentModeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(oneTimeBtn)
                    .addComponent(installmentBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(officeUsePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(traineeIdTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(regNumLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(officeUsePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(enrolledByLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(enrolledByTxtField))
                .addGap(65, 65, 65))
        );

        officeUsePanelLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {durationLabel, enrolledByLabel, feeLabel, installmentBtn, oneTimeBtn, paymentModeLabel, regNumLabel, trainingNameLabel});

        officeUsePanelLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {enrolledByTxtField, traineeIdTxtField});

        addmisionFormLabel.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        addmisionFormLabel.setText("Addmission Form");

        personalDetailsPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Personal Details", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 1, 14))); // NOI18N

        traineeNameLabel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        traineeNameLabel.setText("Trainee Name:");

        genderLabel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        genderLabel.setText("Gender:");

        genderButtonGroup.add(maleRadioButton);
        maleRadioButton.setText("Male");

        genderButtonGroup.add(femaleRadioButton);
        femaleRadioButton.setText("Female");

        traineePhoneLabel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        traineePhoneLabel.setText("Phone Number:");

        traineePhoneTxtField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                traineePhoneTxtFieldKeyTyped(evt);
            }
        });

        emailLabel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        emailLabel.setText("Email-Id:");

        dobLabel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        dobLabel.setText("D.O.B:");

        fatherNameLabel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        fatherNameLabel.setText("Father/Gaurdian Name:");

        fatherPhoneLabel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        fatherPhoneLabel.setText("Phone Number:");

        fatherphoneTxtField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                fatherphoneTxtFieldKeyTyped(evt);
            }
        });

        occuLabel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        occuLabel.setText("Father's/Gaurdian's Occupation:");

        addressLabel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        addressLabel.setText("Permanent Address:");

        permanentAddressTxtArea.setColumns(20);
        permanentAddressTxtArea.setRows(5);
        addressScrollPane.setViewportView(permanentAddressTxtArea);

        cityLabel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        cityLabel.setText("City:");

        pinLabel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        pinLabel.setText("Pin:");

        dobDateChooser.setDateFormatString("yyyy-MM-dd");

        tempAddressLabel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        tempAddressLabel.setText("Temporary Address:");

        tempAddressTxtArea.setColumns(20);
        tempAddressTxtArea.setRows(5);
        jScrollPane1.setViewportView(tempAddressTxtArea);

        pinTempLabel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        pinTempLabel.setText("City:");

        cityTempLabel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        cityTempLabel.setText("pin:");

        javax.swing.GroupLayout personalDetailsPanelLayout = new javax.swing.GroupLayout(personalDetailsPanel);
        personalDetailsPanel.setLayout(personalDetailsPanelLayout);
        personalDetailsPanelLayout.setHorizontalGroup(
            personalDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(personalDetailsPanelLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(personalDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, personalDetailsPanelLayout.createSequentialGroup()
                        .addComponent(traineePhoneLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(traineePhoneTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(157, 157, 157)
                        .addComponent(emailLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(emailTxtField))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, personalDetailsPanelLayout.createSequentialGroup()
                        .addComponent(occuLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(occuTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, personalDetailsPanelLayout.createSequentialGroup()
                        .addComponent(traineeNameLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(traineeNameTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(genderLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(maleRadioButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(femaleRadioButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                        .addComponent(dobLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(dobDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, personalDetailsPanelLayout.createSequentialGroup()
                        .addGroup(personalDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(personalDetailsPanelLayout.createSequentialGroup()
                                .addComponent(fatherNameLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(fatherNameTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(91, 91, 91)
                                .addComponent(fatherPhoneLabel))
                            .addGroup(personalDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, personalDetailsPanelLayout.createSequentialGroup()
                                    .addGap(81, 81, 81)
                                    .addGroup(personalDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(cityLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(pinLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addGroup(personalDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(permanentCityTxtField, javax.swing.GroupLayout.DEFAULT_SIZE, 259, Short.MAX_VALUE)
                                        .addComponent(permanentPinTxtField))
                                    .addGap(104, 104, 104)
                                    .addGroup(personalDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(pinTempLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(cityTempLabel, javax.swing.GroupLayout.Alignment.TRAILING)))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, personalDetailsPanelLayout.createSequentialGroup()
                                    .addComponent(addressLabel)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(addressScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 259, Short.MAX_VALUE)
                                    .addGap(18, 18, 18)
                                    .addComponent(tempAddressLabel))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(personalDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1)
                            .addComponent(tempCityTxtField)
                            .addComponent(tempPinTxtField)
                            .addComponent(fatherphoneTxtField))))
                .addContainerGap(108, Short.MAX_VALUE))
        );

        personalDetailsPanelLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {fatherNameTxtField, occuTxtField});

        personalDetailsPanelLayout.setVerticalGroup(
            personalDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(personalDetailsPanelLayout.createSequentialGroup()
                .addGroup(personalDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(personalDetailsPanelLayout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(traineeNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(14, 14, 14))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, personalDetailsPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(personalDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, personalDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(dobLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(femaleRadioButton, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(maleRadioButton, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(genderLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(traineeNameTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(dobDateChooser, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                .addGroup(personalDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, personalDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(traineePhoneTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(traineePhoneLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(personalDetailsPanelLayout.createSequentialGroup()
                        .addGroup(personalDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(emailTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(emailLabel))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(personalDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, personalDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(fatherPhoneLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(fatherphoneTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(personalDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(fatherNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(fatherNameTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(personalDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(occuLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 36, Short.MAX_VALUE)
                    .addComponent(occuTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(personalDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(personalDetailsPanelLayout.createSequentialGroup()
                        .addGroup(personalDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(personalDetailsPanelLayout.createSequentialGroup()
                                .addComponent(addressLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(addressScrollPane))
                        .addGap(2, 2, 2))
                    .addGroup(personalDetailsPanelLayout.createSequentialGroup()
                        .addComponent(tempAddressLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(personalDetailsPanelLayout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 129, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(personalDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cityLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pinTempLabel)
                    .addComponent(tempCityTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(permanentCityTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(1, 1, 1)
                .addGroup(personalDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(personalDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(pinLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(personalDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cityTempLabel)
                            .addComponent(permanentPinTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(tempPinTxtField, javax.swing.GroupLayout.DEFAULT_SIZE, 29, Short.MAX_VALUE))
                .addContainerGap())
        );

        personalDetailsPanelLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {dobDateChooser, emailTxtField, fatherphoneTxtField});

        personalDetailsPanelLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {fatherNameTxtField, traineePhoneTxtField});

        enrolledDateChooser.setDateFormatString("yyyy-MM-dd");

        saveButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        saveButton.setText("Save");
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });

        enrolledDateLabel.setText("Enrolled Date:");

        javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addGap(321, 321, 321)
                        .addComponent(addmisionFormLabel))
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(accademicDetailsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(officeUsePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(personalDetailsPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(mainPanelLayout.createSequentialGroup()
                                .addGap(37, 37, 37)
                                .addComponent(enrolledDateLabel)
                                .addGap(18, 18, 18)
                                .addComponent(enrolledDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(saveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(20, 20, 20)))))
                .addContainerGap(157, Short.MAX_VALUE))
        );
        mainPanelLayout.setVerticalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(addmisionFormLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(4, 4, 4)
                .addComponent(personalDetailsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(accademicDetailsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(officeUsePanel, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(enrolledDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(enrolledDateLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainPanelLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 24, Short.MAX_VALUE)
                        .addComponent(saveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(90, 90, 90))))
        );

        mainScrollPane.setViewportView(mainPanel);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(120, 120, 120)
                .addComponent(mainScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 931, Short.MAX_VALUE)
                .addGap(76, 76, 76))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 1114, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    public String getSelectedGender() {
        if (maleRadioButton.isSelected()) {
            return "male";
        } else {
            return "female";
        }
    }

    private void setAcademicsTable(List<Accademics> viewAcademicsList) {
        DefaultTableModel model = (DefaultTableModel) accademicDetailsTable.getModel();
        model.setRowCount(0);
        for(Accademics idAcademics : viewAcademicsList){
            System.err.println(idAcademics.getDegree());
        }
        for (Accademics idAcademics : viewAcademicsList) {
            Object row[] = {
                idAcademics.getDegree(),
                idAcademics.getYear(),
                idAcademics.getSchool_college(),
                idAcademics.getBoard_university(),
                idAcademics.getMarks()
            };
            model.addRow(row);
        }
        model.setRowCount(5);
    }

    public void settingValue(Trainee viewEditTrainee) {
        Trainee traineeidObj = viewEditTrainee;
        traineeNameTxtField.setText(viewEditTrainee.getTraineeName());
        String gender = traineeidObj.getGender();
        if (gender.equals("male")) {
            maleRadioButton.setSelected(true);
        } else {
            femaleRadioButton.setSelected(true);
        }
        String dateOfBirth = traineeidObj.getDateOfBirth();
        Date newDateOfBirth = null;
        try {
            newDateOfBirth = new SimpleDateFormat("yyyy-MM-dd").parse(dateOfBirth);
        } catch (ParseException ex) {
            Logger.getLogger(AddmissionFormFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        dobDateChooser.setDate(newDateOfBirth);
        traineePhoneTxtField.setText(traineeidObj.getTraineePhoneNum());
        emailTxtField.setText(traineeidObj.getEmailId());
        fatherNameTxtField.setText(traineeidObj.getFatherName());
        fatherphoneTxtField.setText(traineeidObj.getFatherPhoneNum());
        occuTxtField.setText(traineeidObj.getFatherOccupation());
        permanentAddressTxtArea.setText(traineeidObj.getPermanentAddress());
        permanentCityTxtField.setText(traineeidObj.getPermanentCity());
        permanentPinTxtField.setText(traineeidObj.getPermanentPin());
        tempAddressTxtArea.setText(traineeidObj.getTemporaryAddress());
        tempCityTxtField.setText(traineeidObj.getTemporaryCity());
        tempPinTxtField.setText(traineeidObj.getTemporaryPin());
        trainingsComboBox.setSelectedItem(traineeidObj.getTrainingEnrolled());
        durationTxtField.setText(traineeidObj.getTrainingDuration());
        feeTxtField.setText(traineeidObj.getTrainingFee());
        String paymentMode = traineeidObj.getTrainingPaymentMode();
        if (paymentMode.equals("one time")) {
            oneTimeBtn.setSelected(true);
        } else {
            installmentBtn.setSelected(true);
        }
        traineeIdTxtField.setText(traineeidObj.getTraineeId() + "");
        enrolledByTxtField.setText(traineeidObj.getEnrolledBy());
        String enrolledDate = traineeidObj.getEnrolledDate();
        Date newEnrolledDate = null;
        try {
            newEnrolledDate = new SimpleDateFormat("yyyy-MM-dd").parse(enrolledDate);
        } catch (ParseException ex) {
            Logger.getLogger(AddmissionFormFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        enrolledDateChooser.setDate(newEnrolledDate);

    }

    public ArrayList<Accademics> getTableData() throws Exception {
        ArrayList<Accademics> tableDataList = new ArrayList<>();
        if ((accademicDetailsTable.getValueAt(0, 0).toString()) != null) {
            for (int i = 0; i < accademicDetailsTable.getRowCount(); i++) {
                if (accademicDetailsTable.getValueAt(i, 0) != null) {
                    String degree = accademicDetailsTable.getValueAt(i, 0).toString();
                    String year = accademicDetailsTable.getValueAt(i, 1).toString();
                    String school_College = accademicDetailsTable.getValueAt(i, 2).toString();
                    String board_University = accademicDetailsTable.getValueAt(i, 3).toString();
                    String marks = accademicDetailsTable.getValueAt(i, 4).toString();
                    Accademics accademic = new Accademics(degree, year, school_College, board_University, marks);
                    tableDataList.add(accademic);
                } else {
                    break;
                }
            }
        }
        return tableDataList;
    }

    public ArrayList<Accademics> getUpdatedTableData(ArrayList<Accademics> viewAcademicsList) {
        ArrayList<Accademics> updatedTableDataList = viewAcademicsList;
        int i = 0;
        try {
            for (Accademics updatedAcademic : updatedTableDataList) {
                if (accademicDetailsTable.getValueAt(i, 0) != null) {
                    updatedAcademic.setDegree(accademicDetailsTable.getValueAt(i, 0).toString());
                    updatedAcademic.setYear(accademicDetailsTable.getValueAt(i, 1).toString());
                    updatedAcademic.setSchool_college(accademicDetailsTable.getValueAt(i, 2).toString());
                    updatedAcademic.setBoard_university(accademicDetailsTable.getValueAt(i, 3).toString());
                    updatedAcademic.setMarks(accademicDetailsTable.getValueAt(i, 4).toString());
                } else {
                    break;
                }
                i++;
            }
        } catch (NullPointerException ex) {
            JOptionPane.showMessageDialog(null, "please fill the Academic Details !!", "ERROR", JOptionPane.OK_OPTION);
        }
        for (Accademics add : updatedTableDataList) {
            String degree = add.getDegree();
            System.err.println(degree + " new");
        }
        return updatedTableDataList;
    }

    public static boolean isEmailValid(String email) {
        String emailRegex = "^[a-zA-Z0-9_+&*-]+(?:\\."
                + "[a-zA-Z0-9_+&*-]+)*@"
                + "(?:[a-zA-Z0-9-]+\\.)+[a-z"
                + "A-Z]{2,7}$";
        Pattern pat = Pattern.compile(emailRegex);
        if (email == null) {
            return false;
        }
        return pat.matcher(email).matches();
    }
    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        try {
            String traineeName = traineeNameTxtField.getText().trim();
            String phoneNum = traineePhoneTxtField.getText().trim();
            String email = emailTxtField.getText().trim();
            String fatherName = fatherNameTxtField.getText().trim();
            String fatherPhoneNum = fatherphoneTxtField.getText().trim();
            String occupation = occuTxtField.getText().trim();
            String permanentAddress = permanentAddressTxtArea.getText().trim();
            String permanentCity = permanentCityTxtField.getText().trim();
            String permanentPin = permanentPinTxtField.getText().trim();
            String trainingName = (String) trainingsComboBox.getSelectedItem();
            String fee = feeTxtField.getText().trim();
            String trainingDuration = durationTxtField.getText().trim();
            String enrolledBy = enrolledByTxtField.getText().trim();
            Trainee trainee;
            //   Accademics academicTable;
            Date date = dobDateChooser.getDate();
            SimpleDateFormat formatter = new SimpleDateFormat("yyyy-MM-dd");
            String dobDate = formatter.format(date);
            String enrolledDate = formatter.format(date);
            Trainings getId = new Trainings((String) trainingsComboBox.getSelectedItem());
            int trainingId = TrainingsDbService.getTrainingId(getId);
            boolean chechEmail = isEmailValid(email);
//            if (chechEmail != false) {
//                JOptionPane.showMessageDialog(null, "InvaildEmail", "Error", JOptionPane.OK_OPTION);
//            }

            List<Accademics> academics = getTableData();

            if (saveButton.getText().equals("Save")) {
                if (!traineeName.isEmpty() && maleRadioButton.isSelected() || femaleRadioButton.isSelected() && !dobDate.isEmpty() && !phoneNum.isEmpty() && !email.isEmpty() && chechEmail && !fatherName.isEmpty()
                        && !fatherPhoneNum.isEmpty() && !occupation.isEmpty() && !permanentAddress.isEmpty() && !permanentCity.isEmpty() && !permanentPin.isEmpty() && !trainingName.isEmpty()
                        && oneTimeBtn.isSelected() || installmentBtn.isSelected() && !enrolledBy.isEmpty() && !enrolledDate.isEmpty()) {
                    trainee = new Trainee(traineeName, getSelectedGender(), dobDate, phoneNum,
                            email, fatherName, fatherPhoneNum, occupation, permanentAddress,
                            permanentCity, permanentPin, tempAddressTxtArea.getText(), tempCityTxtField.getText(),
                            tempPinTxtField.getText(), academics, trainingId, trainingName, trainingDuration, fee, getSelectedInstallments(),
                            Integer.parseInt(traineeIdTxtField.getText()), enrolledBy, enrolledDate);
                    boolean check = TraineeDbService.addTrainee(trainee);
                    if (check) {
                        JOptionPane.showMessageDialog(null, "trainee Successfully Added");
                        traineeNameTxtField.setText("");
                        genderButtonGroup.clearSelection();
                        dobDateChooser.setDate(null);
                        traineePhoneTxtField.setText("");
                        emailTxtField.setText("");
                        fatherNameTxtField.setText("");
                        fatherphoneTxtField.setText("");
                        occuTxtField.setText("");
                        permanentAddressTxtArea.setText("");
                        permanentCityTxtField.setText("");
                        permanentPinTxtField.setText("");
                        tempCityTxtField.setText("");
                        tempPinTxtField.setText("");
                        tempAddressTxtArea.setText("");
                        DefaultTableModel tableModel = (DefaultTableModel) accademicDetailsTable.getModel();
                        tableModel.setRowCount(0);
                        tableModel.setRowCount(5);
                        //trainingsComboBox.setSelectedIndex(0);
                        feeTxtField.setText("");
                        durationTxtField.setText("");
                        paymentModeButtonGroup.clearSelection();
                        //traineeIdTxtField.setText("");
                        enrolledByTxtField.setText("");
                        enrolledDateChooser.setDate(null);
                        //saveButton.setEnabled(false);
                        dispose();
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "Please fill all the filds !! ", "ERROR", JOptionPane.OK_OPTION);
                }
            } else if (saveButton.getText().equals("Update")) {
                List<Accademics> updatedAcademicsList = getUpdatedTableData(viewAcademicsList);
                if (!traineeName.isEmpty() && maleRadioButton.isSelected() || femaleRadioButton.isSelected() && !dobDate.isEmpty() && !phoneNum.isEmpty() && !email.isEmpty() && chechEmail && !fatherName.isEmpty()
                        && !fatherPhoneNum.isEmpty() && !occupation.isEmpty() && !permanentAddress.isEmpty() && !permanentCity.isEmpty() && !permanentPin.isEmpty() && !trainingName.isEmpty()
                        && oneTimeBtn.isSelected() || installmentBtn.isSelected() && !enrolledBy.isEmpty() && !enrolledDate.isEmpty()) {

                    trainee = new Trainee(traineeNameTxtField.getText(), getSelectedGender(), dobDate, traineePhoneTxtField.getText(),
                            emailTxtField.getText(), fatherNameTxtField.getText(), fatherphoneTxtField.getText(), occuTxtField.getText(), permanentAddressTxtArea.getText(),
                            permanentCityTxtField.getText(), permanentPinTxtField.getText(), tempAddressTxtArea.getText(), tempCityTxtField.getText(),
                            tempPinTxtField.getText(), updatedAcademicsList, trainingId, (String) trainingsComboBox.getSelectedItem(), durationTxtField.getText(), feeTxtField.getText(), getSelectedInstallments(),
                            Integer.parseInt(traineeIdTxtField.getText()), enrolledByTxtField.getText(), enrolledDate);

                    TraineeDbService.updateTrainee(trainee);
                    for (Accademics acd : updatedAcademicsList) {
                        System.out.println("== " + acd.getDegree());
                        System.out.println("== " + acd.getAcademicId());
                    }
                    JOptionPane.showMessageDialog(null, "trainee Successfully Updated");
                    dispose();
                } else {
                    JOptionPane.showMessageDialog(null, "Please fill the required fields !!", "ERROR", JOptionPane.OK_OPTION);
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException ex) {
            Logger.getLogger(AddmissionFormFrame.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(AddmissionFormFrame.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, "Invalid Email or invalid Entry !!", "ERROR", JOptionPane.OK_OPTION);
        } catch (Exception ex) {
            Logger.getLogger(AddmissionFormFrame.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, "Please fill your Academic Details !!", "ERROR", JOptionPane.OK_OPTION);
        }
    }//GEN-LAST:event_saveButtonActionPerformed

    private void trainingsComboBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_trainingsComboBoxItemStateChanged
        try {
            Trainee values = new Trainee((String) trainingNameModel.getSelectedItem());
            ArrayList<Trainee> valueList = TrainingsDbService.getTrainingValues(values);
            Trainee trainingValues = valueList.get(0);
            String trainingDuration = trainingValues.getTrainingDuration();
            String trainingFee = trainingValues.getTrainingFee();
            System.out.println(trainingFee);
            System.out.println(trainingDuration);
            //String installments=trainingValues.getTrainingPaymentMode();
            if (trainingNameModel.getSelectedItem() == "--SELECT--") {
                durationTxtField.setText("");
                feeTxtField.setText("");
            } else {
                durationTxtField.setText(trainingDuration);
                feeTxtField.setText(trainingFee);
            }

        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | SQLException ex) {
            Logger.getLogger(AddmissionFormFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_trainingsComboBoxItemStateChanged

    private void fatherphoneTxtFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_fatherphoneTxtFieldKeyTyped
        char digit = evt.getKeyChar();
        if (!(Character.isDigit(digit))) {
            evt.consume();
        }
    }//GEN-LAST:event_fatherphoneTxtFieldKeyTyped

    private void traineePhoneTxtFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_traineePhoneTxtFieldKeyTyped
        char digit = evt.getKeyChar();
        if (!(Character.isDigit(digit))) {
            evt.consume();
        }
    }//GEN-LAST:event_traineePhoneTxtFieldKeyTyped

    private void enrolledByTxtFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_enrolledByTxtFieldKeyReleased
        if (enrolledByTxtField.getText().matches("")) {
            saveButton.setEnabled(false);
        } else {
            saveButton.setEnabled(true);
        }
    }//GEN-LAST:event_enrolledByTxtFieldKeyReleased


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel accademicDetailsPanel;
    private javax.swing.JTable accademicDetailsTable;
    private javax.swing.JLabel addmisionFormLabel;
    private javax.swing.JLabel addressLabel;
    private javax.swing.JScrollPane addressScrollPane;
    private javax.swing.JLabel cityLabel;
    private javax.swing.JLabel cityTempLabel;
    private com.toedter.calendar.JDateChooser dobDateChooser;
    private javax.swing.JLabel dobLabel;
    private javax.swing.JLabel durationLabel;
    private javax.swing.JTextField durationTxtField;
    private javax.swing.JLabel emailLabel;
    private javax.swing.JTextField emailTxtField;
    private javax.swing.JLabel enrolledByLabel;
    private javax.swing.JTextField enrolledByTxtField;
    private com.toedter.calendar.JDateChooser enrolledDateChooser;
    private javax.swing.JLabel enrolledDateLabel;
    private javax.swing.JLabel fatherNameLabel;
    private javax.swing.JTextField fatherNameTxtField;
    private javax.swing.JLabel fatherPhoneLabel;
    private javax.swing.JTextField fatherphoneTxtField;
    private javax.swing.JLabel feeLabel;
    private javax.swing.JTextField feeTxtField;
    private javax.swing.JRadioButton femaleRadioButton;
    private javax.swing.ButtonGroup genderButtonGroup;
    private javax.swing.JLabel genderLabel;
    private javax.swing.JRadioButton installmentBtn;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JScrollPane mainScrollPane;
    private javax.swing.JRadioButton maleRadioButton;
    private javax.swing.JLabel occuLabel;
    private javax.swing.JTextField occuTxtField;
    private javax.swing.JPanel officeUsePanel;
    private javax.swing.JRadioButton oneTimeBtn;
    private javax.swing.ButtonGroup paymentModeButtonGroup;
    private javax.swing.JLabel paymentModeLabel;
    private javax.swing.JTextArea permanentAddressTxtArea;
    private javax.swing.JTextField permanentCityTxtField;
    private javax.swing.JTextField permanentPinTxtField;
    private javax.swing.JPanel personalDetailsPanel;
    private javax.swing.JLabel pinLabel;
    private javax.swing.JLabel pinTempLabel;
    private javax.swing.JLabel regNumLabel;
    public static javax.swing.JButton saveButton;
    private javax.swing.JScrollPane tableScrollPane;
    private javax.swing.JLabel tempAddressLabel;
    private javax.swing.JTextArea tempAddressTxtArea;
    private javax.swing.JTextField tempCityTxtField;
    private javax.swing.JTextField tempPinTxtField;
    private javax.swing.JTextField traineeIdTxtField;
    private javax.swing.JLabel traineeNameLabel;
    private javax.swing.JTextField traineeNameTxtField;
    private javax.swing.JLabel traineePhoneLabel;
    private javax.swing.JTextField traineePhoneTxtField;
    private javax.swing.JLabel trainingNameLabel;
    private javax.swing.JComboBox trainingsComboBox;
    // End of variables declaration//GEN-END:variables

}

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package admissionform.mz;

import DbService.mz.TrainingsDbService;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import mz.beans.Trainings;

/**
 *
 * @author Aman
 */
public class UpdateForm extends javax.swing.JInternalFrame {

    /**
     * Creates new form UpdateForm
     */
    public UpdateForm() {
        initComponents();
    }
    int[] rowCount;
    JTable trainingTable;
    int pos = 0;

    UpdateForm(ArrayList<Trainings> trainingsList) {
        this();
        printInEditFrame(trainingsList);
    }

    UpdateForm(ArrayList<Trainings> trainingsList, int[] rows, JTable trainingDetailTable) {
        this();
        this.rowCount = rows;
        this.trainingTable = trainingDetailTable;
        printInViewFrame(trainingsList);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        installmentsButtonGroup = new javax.swing.ButtonGroup();
        trainingsLabel = new javax.swing.JLabel();
        trainingNameLabel = new javax.swing.JLabel();
        trainingNameTxtField = new javax.swing.JTextField();
        trainingIDLabel = new javax.swing.JLabel();
        trainingIdTxtField = new javax.swing.JTextField();
        durationLabel = new javax.swing.JLabel();
        durationComboBox = new javax.swing.JComboBox();
        feeLabel = new javax.swing.JLabel();
        feeTxtField = new javax.swing.JTextField();
        discriptionLabel = new javax.swing.JLabel();
        installmentsLabel = new javax.swing.JLabel();
        availBtn = new javax.swing.JRadioButton();
        notAvailBtn = new javax.swing.JRadioButton();
        installmentsSpinner = new javax.swing.JSpinner();
        updateBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        discriptionTxtArea = new javax.swing.JTextArea();
        moveAllPreviousBtn = new javax.swing.JButton();
        previousBtn = new javax.swing.JButton();
        nextBtn = new javax.swing.JButton();
        moveAllForwardBtn = new javax.swing.JButton();
        sNoLabel = new javax.swing.JLabel();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);

        trainingsLabel.setFont(new java.awt.Font("Times New Roman", 1, 52)); // NOI18N
        trainingsLabel.setText("Trainings");

        trainingNameLabel.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        trainingNameLabel.setText("Training Name:");

        trainingNameTxtField.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        trainingIDLabel.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        trainingIDLabel.setText("Training Id:");

        trainingIdTxtField.setEditable(false);
        trainingIdTxtField.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        durationLabel.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        durationLabel.setText("Duration:");

        durationComboBox.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        durationComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "       ", "2 months", "3 months", "4 months", "6 months", "12 months", "18 months", " ", " ", " " }));

        feeLabel.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        feeLabel.setText("Fee:");

        feeTxtField.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        discriptionLabel.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        discriptionLabel.setText("Discription:");

        installmentsLabel.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        installmentsLabel.setText("Installments:");

        installmentsButtonGroup.add(availBtn);
        availBtn.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        availBtn.setText("Available");
        availBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                availBtnActionPerformed(evt);
            }
        });

        installmentsButtonGroup.add(notAvailBtn);
        notAvailBtn.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        notAvailBtn.setText("Not Available");
        notAvailBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                notAvailBtnActionPerformed(evt);
            }
        });

        installmentsSpinner.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        installmentsSpinner.setModel(new javax.swing.SpinnerNumberModel(0, 0, 15, 1));
        installmentsSpinner.setEnabled(false);

        updateBtn.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        updateBtn.setText("Update");
        updateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateBtnActionPerformed(evt);
            }
        });

        discriptionTxtArea.setColumns(20);
        discriptionTxtArea.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        discriptionTxtArea.setRows(5);
        jScrollPane1.setViewportView(discriptionTxtArea);

        moveAllPreviousBtn.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        moveAllPreviousBtn.setText("|<");
        moveAllPreviousBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                moveAllPreviousBtnActionPerformed(evt);
            }
        });

        previousBtn.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        previousBtn.setText("<<");
        previousBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                previousBtnActionPerformed(evt);
            }
        });

        nextBtn.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        nextBtn.setText(">>");
        nextBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextBtnActionPerformed(evt);
            }
        });

        moveAllForwardBtn.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        moveAllForwardBtn.setText(">|");
        moveAllForwardBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                moveAllForwardBtnActionPerformed(evt);
            }
        });

        sNoLabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(trainingsLabel)
                .addGap(531, 531, 531))
            .addGroup(layout.createSequentialGroup()
                .addGap(76, 76, 76)
                .addComponent(sNoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(513, 513, 513)
                .addComponent(updateBtn)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(trainingIDLabel)
                    .addComponent(trainingNameLabel)
                    .addComponent(durationLabel)
                    .addComponent(feeLabel)
                    .addComponent(installmentsLabel)
                    .addComponent(discriptionLabel)
                    .addComponent(moveAllPreviousBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(durationComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(feeTxtField)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 242, Short.MAX_VALUE)
                                .addComponent(trainingNameTxtField, javax.swing.GroupLayout.DEFAULT_SIZE, 242, Short.MAX_VALUE)
                                .addComponent(trainingIdTxtField))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(availBtn)
                                        .addGap(6, 6, 6)
                                        .addComponent(notAvailBtn))
                                    .addComponent(moveAllForwardBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(installmentsSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(previousBtn)
                        .addGap(18, 18, 18)
                        .addComponent(nextBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {moveAllForwardBtn, moveAllPreviousBtn, nextBtn, previousBtn});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(trainingsLabel)
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(trainingNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(trainingNameTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(trainingIdTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(trainingIDLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(durationLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(durationComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 19, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(feeLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(feeTxtField))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(discriptionLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 21, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(installmentsLabel)
                    .addComponent(availBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(notAvailBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(installmentsSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(updateBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sNoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(previousBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(nextBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(moveAllPreviousBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(moveAllForwardBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {durationComboBox, feeTxtField, trainingIdTxtField, trainingNameTxtField});

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {moveAllPreviousBtn, nextBtn, previousBtn});

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void availBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_availBtnActionPerformed
        installmentsSpinner.setEnabled(true);
    }//GEN-LAST:event_availBtnActionPerformed

    private void notAvailBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_notAvailBtnActionPerformed
        installmentsSpinner.setValue(0);
        installmentsSpinner.setEnabled(false);
    }//GEN-LAST:event_notAvailBtnActionPerformed

    public String getInstallments() {
        if (availBtn.isSelected()) {
            return "available";
        } else {
            return "not Available";
        }
    }

    private void printInViewFrame(ArrayList<Trainings> viewTrainingList) {
        printValuesInForm(viewTrainingList);
        sNoLabel.setText((pos + 1) + "/" + rowCount.length);
        trainingNameTxtField.setEditable(false);
        trainingIdTxtField.setEditable(false);
        durationComboBox.setEditable(false);
        feeTxtField.setEditable(false);
        discriptionTxtArea.setEditable(false);
//        availBtn.
//        notAvailBtn.setSelected(false);
    }

    private void printInEditFrame(ArrayList<Trainings> editTrainingList) {
        printValuesInForm(editTrainingList);
        moveAllForwardBtn.setVisible(false);
        moveAllPreviousBtn.setVisible(false);
        previousBtn.setVisible(false);
        nextBtn.setVisible(false);
        sNoLabel.setVisible(false);
    }

    private void printValuesInForm(ArrayList<Trainings> editViewTrainingList) {
        Trainings trainingidObj = editViewTrainingList.get(0);
        System.err.println(trainingidObj);
        int id = trainingidObj.getTrainingId();
        String trainingName = trainingidObj.getTrainingName();
        String duration = trainingidObj.getDuration();
        String fee = trainingidObj.getFee();
        String description = trainingidObj.getDiscription();
        String installments = trainingidObj.getInstallments();
        int availInstallments = trainingidObj.getAvailInstallments();
        trainingNameTxtField.setText(trainingName);
        trainingIdTxtField.setText(id + "");
        durationComboBox.setSelectedItem(duration);
        feeTxtField.setText(fee);
        discriptionTxtArea.setText(description);
        if (installments.equals("available")) {
            availBtn.setSelected(true);
            installmentsSpinner.setEnabled(true);
            installmentsSpinner.setValue(availInstallments);
        } else {
            notAvailBtn.setSelected(true);
            installmentsSpinner.setValue(0);
            installmentsSpinner.setEnabled(false);
        }
    }
    
    private void updateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateBtnActionPerformed
        boolean check = false;
        try {
            String trainingName = trainingNameTxtField.getText().trim();
            String duration = (String) durationComboBox.getSelectedItem();
            String fee = feeTxtField.getText().trim();
            String description = discriptionTxtArea.getText().trim();
            String trainingId=trainingIdTxtField.getText().trim();
            int updateTrainingId = Integer.parseInt(trainingId);
            if (!trainingName.isEmpty() && !duration.isEmpty() && !fee.isEmpty() && !description.isEmpty() && availBtn.isSelected() || notAvailBtn.isSelected()) {
                Trainings trainingUpdate;
                trainingUpdate = new Trainings(updateTrainingId, trainingName, duration, fee, description,
                        getInstallments(), (int) installmentsSpinner.getValue());
                check = TrainingsDbService.updateTraining(trainingUpdate);
                if (check) {
                    JOptionPane.showMessageDialog(null, "Training Successfully Updated !!");
                    dispose();
                }
            }
            else{
                JOptionPane.showMessageDialog(null,"Please fill the Reqiured fields !!","ERROR",JOptionPane.OK_OPTION);
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | SQLException ex) {
            Logger.getLogger(AddTrainingsFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_updateBtnActionPerformed

    private void moveAllPreviousBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_moveAllPreviousBtnActionPerformed
        pos = 0;
        if (pos < 0) {
            pos = 0;
        }
        sendIndexPosition(pos);
    }//GEN-LAST:event_moveAllPreviousBtnActionPerformed

    private void previousBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_previousBtnActionPerformed
        --pos;
        if (pos < 0) {
            pos = 0;
        }
        sendIndexPosition(pos);
    }//GEN-LAST:event_previousBtnActionPerformed

    private void nextBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextBtnActionPerformed
        ++pos;
        if (pos >= rowCount.length) {
            pos = rowCount.length - 1;
        }
        sendIndexPosition(pos);
    }//GEN-LAST:event_nextBtnActionPerformed

    private void moveAllForwardBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_moveAllForwardBtnActionPerformed
        if (pos < rowCount.length) {
            pos = rowCount.length - 1;
            sendIndexPosition(pos);
        }
    }//GEN-LAST:event_moveAllForwardBtnActionPerformed
    private void sendIndexPosition(int position) {
        int id = (int) trainingTable.getModel().getValueAt(rowCount[position], 0);
        try {
            ArrayList<Trainings> viewTrainingList = TrainingsDbService.viewTraining(id);
            printInViewFrame(viewTrainingList);
        } catch (ClassNotFoundException | SQLException | InstantiationException | IllegalAccessException ex) {
            Logger.getLogger(UpdateForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JRadioButton availBtn;
    private javax.swing.JLabel discriptionLabel;
    public static javax.swing.JTextArea discriptionTxtArea;
    public static javax.swing.JComboBox durationComboBox;
    private javax.swing.JLabel durationLabel;
    private javax.swing.JLabel feeLabel;
    public static javax.swing.JTextField feeTxtField;
    private javax.swing.ButtonGroup installmentsButtonGroup;
    private javax.swing.JLabel installmentsLabel;
    public static javax.swing.JSpinner installmentsSpinner;
    private javax.swing.JScrollPane jScrollPane1;
    public static javax.swing.JButton moveAllForwardBtn;
    public static javax.swing.JButton moveAllPreviousBtn;
    public static javax.swing.JButton nextBtn;
    public static javax.swing.JRadioButton notAvailBtn;
    public static javax.swing.JButton previousBtn;
    private javax.swing.JLabel sNoLabel;
    private javax.swing.JLabel trainingIDLabel;
    public static javax.swing.JTextField trainingIdTxtField;
    private javax.swing.JLabel trainingNameLabel;
    public static javax.swing.JTextField trainingNameTxtField;
    private javax.swing.JLabel trainingsLabel;
    public static javax.swing.JButton updateBtn;
    // End of variables declaration//GEN-END:variables

}

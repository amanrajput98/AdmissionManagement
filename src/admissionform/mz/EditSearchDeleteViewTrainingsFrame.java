/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package admissionform.mz;

import java.util.ArrayList;
import javax.swing.JMenuItem;
import javax.swing.event.InternalFrameEvent;
import javax.swing.table.DefaultTableModel;
import mz.beans.Trainings;
import DbService.mz.TrainingsDbService;
import java.beans.PropertyVetoException;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JDesktopPane;
import javax.swing.JOptionPane;
import javax.swing.event.InternalFrameAdapter;

/**
 *
 * @author Aman
 */
public class EditSearchDeleteViewTrainingsFrame extends javax.swing.JInternalFrame {  
    DefaultTableModel model = null;
    // private JButton updateBtn;

    /**
     * Creates new form EditSearchTrainingsInternalFrame
     */
    public EditSearchDeleteViewTrainingsFrame() {
        initComponents();
    }

    EditSearchDeleteViewTrainingsFrame(JMenuItem editSearchDeleteMenuItem) {
        this();
        addInternalFrameListener(new InternalFrameAdapter() {
            @Override
            public void internalFrameClosed(InternalFrameEvent e) {
                editSearchDeleteMenuItem.setEnabled(true);
                //model.setRowCount(0);
                trainingsNameTxtField.setText("");
                trainingIdTxtField.setText("");
                durationTxtField.setText("");
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        trainingDetailsLabel = new javax.swing.JLabel();
        durationEditLabel = new javax.swing.JLabel();
        durationTxtField = new javax.swing.JTextField();
        trainingsNameTxtField = new javax.swing.JTextField();
        trainingNameEditLabel = new javax.swing.JLabel();
        searchButton = new javax.swing.JButton();
        trainingIdLabel = new javax.swing.JLabel();
        trainingIdTxtField = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        trainingsTable = new javax.swing.JTable();
        editButton = new javax.swing.JButton();
        viewBtn = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);

        trainingDetailsLabel.setFont(new java.awt.Font("Times New Roman", 1, 53)); // NOI18N
        trainingDetailsLabel.setText("Training Details");

        durationEditLabel.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        durationEditLabel.setText("Duration:");

        trainingsNameTxtField.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        trainingNameEditLabel.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        trainingNameEditLabel.setText("Training Name:");

        searchButton.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        searchButton.setText("Search");
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });

        trainingIdLabel.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        trainingIdLabel.setText("Training Id:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(475, 475, 475)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(trainingIdLabel)
                                .addGap(30, 30, 30))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(durationEditLabel)
                                    .addComponent(trainingNameEditLabel))
                                .addGap(18, 18, 18)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(trainingsNameTxtField, javax.swing.GroupLayout.DEFAULT_SIZE, 183, Short.MAX_VALUE)
                            .addComponent(trainingIdTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(durationTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(searchButton)))
                    .addComponent(trainingDetailsLabel))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {durationTxtField, trainingsNameTxtField});

        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(trainingDetailsLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(trainingIdLabel)
                    .addComponent(trainingIdTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(trainingsNameTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(trainingNameEditLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(durationEditLabel)
                    .addComponent(durationTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addComponent(searchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {durationEditLabel, durationTxtField, trainingIdLabel, trainingIdTxtField, trainingNameEditLabel, trainingsNameTxtField});

        trainingsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "TrainingId", "Training Enrolled", "Duration", "Fee", "Installments", "AvailInstallments", "..."
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Integer.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        trainingsTable.setColumnSelectionAllowed(true);
        jScrollPane1.setViewportView(trainingsTable);
        trainingsTable.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);
        if (trainingsTable.getColumnModel().getColumnCount() > 0) {
            trainingsTable.getColumnModel().getColumn(0).setResizable(false);
            trainingsTable.getColumnModel().getColumn(1).setResizable(false);
            trainingsTable.getColumnModel().getColumn(2).setResizable(false);
            trainingsTable.getColumnModel().getColumn(3).setResizable(false);
            trainingsTable.getColumnModel().getColumn(4).setResizable(false);
            trainingsTable.getColumnModel().getColumn(5).setResizable(false);
            trainingsTable.getColumnModel().getColumn(6).setPreferredWidth(40);
            trainingsTable.getColumnModel().getColumn(6).setMaxWidth(40);
        }

        editButton.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        editButton.setText("Edit");
        editButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editButtonActionPerformed(evt);
            }
        });

        viewBtn.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        viewBtn.setText("View");
        viewBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewBtnActionPerformed(evt);
            }
        });

        deleteButton.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        deleteButton.setText("Delete");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(113, 113, 113)
                .addComponent(editButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(viewBtn)
                .addGap(457, 457, 457)
                .addComponent(deleteButton)
                .addGap(101, 101, 101))
            .addComponent(jScrollPane1)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(editButton, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(deleteButton)
                    .addComponent(viewBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel2Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {deleteButton, editButton});

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(51, 51, 51))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     *
     */
    public void showTrainings() {
        try {
            ArrayList<Trainings> trainingsList;
            int trainingId = 0;
            if (trainingIdTxtField.getText().isEmpty()) {
                trainingId = 0;
            } else {
                trainingId = Integer.parseInt(trainingIdTxtField.getText());
            }
            Trainings trainingToBeSearched = new Trainings(trainingId, trainingsNameTxtField.getText(), durationTxtField.getText());
            trainingsList = TrainingsDbService.searchTraining(trainingToBeSearched);
            for (Trainings training : trainingsList) {
                Object[] row = {
                    training.getTrainingId(),
                    training.getTrainingName(),
                    training.getDuration(),
                    training.getFee(),
                    training.getInstallments(),
                    training.getAvailInstallments()
                };
                model.addRow(row);
            }
            if (model.getRowCount() == 0) {
                JOptionPane.showMessageDialog(null, "No record Found !!", "ERROR", JOptionPane.OK_OPTION);
            }

        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | SQLException ex) {
            Logger.getLogger(EditSearchDeleteViewTrainingsFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        model = (DefaultTableModel) trainingsTable.getModel();
        model.setRowCount(0);
        showTrainings();
    }//GEN-LAST:event_searchButtonActionPerformed

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        int rows[] = trainingsTable.getSelectedRows();
        boolean check = false;
        if (rows.length > 0) {
            //DefaultTableModel model = (DefaultTableModel) trainingsTable.getModel();
            //int totalRow = trainingsTable.getRowCount();
            int result = JOptionPane.showConfirmDialog(null, "Are you sure to delete the following training ??", "Delete", JOptionPane.YES_NO_OPTION);
            if (result == 0) {
                for (int i = 0; i < rows.length; i++) {
                    //if ((Boolean) model.getValueAt(i, 6) != null && (Boolean) model.getValueAt(i, 6) == true) {
                    try {
                        int trainingId = Integer.parseInt(model.getValueAt(rows[i], 0).toString());
                        Trainings trainingToBeDeleted = new Trainings(trainingId);
                        TrainingsDbService trainings = new TrainingsDbService();
                        check = trainings.deleteTraining(trainingToBeDeleted);
                    } catch (ClassNotFoundException | InstantiationException | IllegalAccessException ex) {
                        Logger.getLogger(EditSearchDeleteViewTrainingsFrame.class.getName()).log(Level.SEVERE, null, ex);
                    } catch (SQLException ex) {
                        Logger.getLogger(EditSearchDeleteViewTrainingsFrame.class.getName()).log(Level.SEVERE, null, ex);
                        JOptionPane.showMessageDialog(null, "Cannot Delete this Training ...Training is in use", "Delete", JOptionPane.OK_OPTION);
                    }
                }
                if (check) {
                    model.setRowCount(0);
                    showTrainings();
                    JOptionPane.showMessageDialog(null, "Training successfully deleted!!");
                }
            }
        } else {
            JOptionPane.showMessageDialog(null, "please select atleast one training to delete !!", "Delete", JOptionPane.OK_OPTION);
        }
    }//GEN-LAST:event_deleteButtonActionPerformed

    private void editButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editButtonActionPerformed
        int row[] = trainingsTable.getSelectedRows();
        if (row.length == 1) {
            try {
                int trainingId = Integer.parseInt(model.getValueAt(row[0], 0).toString());
                ArrayList<Trainings> editTrainingsList;
                Trainings trainingToBeUpdated = new Trainings(trainingId);
                editTrainingsList = TrainingsDbService.editTraining(trainingToBeUpdated);
                UpdateForm toBeUpdate = new UpdateForm(editTrainingsList);
                JDesktopPane desktopPane = getDesktopPane();
                desktopPane.add(toBeUpdate);
                toBeUpdate.setVisible(true);
                toBeUpdate.setMaximum(true);
            } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | SQLException | PropertyVetoException ex) {
                Logger.getLogger(EditSearchDeleteViewTrainingsFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else if (row.length > 1) {
            JOptionPane.showMessageDialog(null, "Cannot Select more than 1 training !!", "Update", JOptionPane.OK_OPTION);
        } else {
            JOptionPane.showMessageDialog(null, "select training to Update !!", "Update", JOptionPane.OK_OPTION);
        }
    }//GEN-LAST:event_editButtonActionPerformed

    private void viewBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewBtnActionPerformed
        int rows[] = trainingsTable.getSelectedRows();
        UpdateForm toBeView = null;
        if (rows.length > 0) {
            for (int i = 0; i < rows.length; i++) {
                try {
                    int trainingId = Integer.parseInt(model.getValueAt(rows[i], 0).toString());
                    System.err.println(trainingId);
                    ArrayList<Trainings> viewTrainingsList;
                    viewTrainingsList = TrainingsDbService.viewTraining(trainingId);
                    toBeView = new UpdateForm(viewTrainingsList, rows, trainingsTable);
                } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | SQLException ex) {
                    Logger.getLogger(EditSearchDeleteViewTrainingsFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            UpdateForm.updateBtn.setVisible(false);
            JDesktopPane desktopPane = getDesktopPane();
            desktopPane.add(toBeView);
            toBeView.setVisible(true);
            try {
                toBeView.setMaximum(true);
            } catch (PropertyVetoException ex) {
                Logger.getLogger(EditSearchDeleteViewTrainingsFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            JOptionPane.showMessageDialog(null, "select training to View !!", "View", JOptionPane.OK_OPTION);
        }
    }//GEN-LAST:event_viewBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton deleteButton;
    private javax.swing.JLabel durationEditLabel;
    private javax.swing.JTextField durationTxtField;
    private javax.swing.JButton editButton;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton searchButton;
    private javax.swing.JLabel trainingDetailsLabel;
    private javax.swing.JLabel trainingIdLabel;
    private javax.swing.JTextField trainingIdTxtField;
    private javax.swing.JLabel trainingNameEditLabel;
    private javax.swing.JTextField trainingsNameTxtField;
    private javax.swing.JTable trainingsTable;
    private javax.swing.JButton viewBtn;
    // End of variables declaration//GEN-END:variables
}
